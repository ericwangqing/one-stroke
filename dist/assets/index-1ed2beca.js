(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&s(h)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();class f{constructor(t,e){this.canvas=t,this.ctx=e,this.vertices=[],this.edges=[]}addVertex(t){this.vertices.push(t)}addEdge(t){this.edges.push(t)}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.vertices.forEach(t=>t.draw()),this.edges.forEach(t=>t.draw())}}class v{static sortByX(...t){return t.sort((e,s)=>e.x-s.x)}constructor(t,e,s,i){this.x=t,this.y=e,this.name=s,this.ctx=i}draw(t="black"){this.ctx.beginPath(),this.ctx.arc(this.x,this.y,5,0,Math.PI*2),this.ctx.fillStyle=t,this.ctx.fill(),this.ctx.closePath(),this.ctx.font="14px Arial",this.ctx.fillStyle=t,this.ctx.fillText(this.name,this.x-5,this.y-10)}}class y{constructor(t,e,s,i,r){[t,e]=v.sortByX(t,e),this.vertex1=t,this.vertex2=e,this.name=s,this.curveFactor=i,this.ctx=r;const h=(t.x+e.x)/2,o=(t.y+e.y)/2,n=e.x-t.x,a=e.y-t.y,c=Math.sqrt(n*n+a*a);this.controlPoint={x:h+i*a/c,y:o-i*n/c}}draw(t="black"){this.ctx.beginPath(),this.ctx.moveTo(this.vertex1.x,this.vertex1.y),this.ctx.quadraticCurveTo(this.controlPoint.x,this.controlPoint.y,this.vertex2.x,this.vertex2.y),this.ctx.strokeStyle=t,this.ctx.lineWidth=2,this.ctx.stroke(),this.ctx.closePath();const e=this.getPointOnBezierCurve(.5);this.ctx.font="14px Arial",this.ctx.fillStyle=t,this.ctx.fillText(this.name,e.x-10,e.y)}getPointOnBezierCurve(t){const e=(1-t)*(1-t)*this.vertex1.x+2*(1-t)*t*this.controlPoint.x+t*t*this.vertex2.x,s=(1-t)*(1-t)*this.vertex1.y+2*(1-t)*t*this.controlPoint.y+t*t*this.vertex2.y;return{x:e,y:s}}pointToEdgeDistance(t,e){let i=1/0;for(let r=0;r<100;r++){const h=r/100,o=(r+1)/100,n=this.getPointOnBezierCurve(h),a=this.getPointOnBezierCurve(o),c=a.x-n.x,l=a.y-n.y,x=Math.sqrt(c*c+l*l),g=((t-n.x)*c+(e-n.y)*l)/(x*x),p=g<0?n:g>1?a:{x:n.x+g*c,y:n.y+g*l},m=Math.sqrt(Math.pow(t-p.x,2)+Math.pow(e-p.y,2));i=Math.min(i,m)}return i}}const w=document.getElementById("restartDrawing"),E=document.getElementById("restartGraph");class V{constructor(){this.description=document.getElementById("description"),this.canvas=document.getElementById("drawingArea"),this.ctx=this.canvas.getContext("2d"),this.graph=new f(this.canvas,this.ctx),this.edgeVertices=[],this.isDrawingMode=!1,this.currentVertex=null,this.visitedEdges=[],this.stepsContainer=document.getElementById("stepsContainer"),this.init()}get vertexCounter(){return this.graph.vertices.length}get edgeCounter(){return this.graph.edges.length}get currentEdge(){return this.visitedEdges.slice(-1)[0]}init(){this.canvas.addEventListener("click",t=>{t.stopPropagation(),this.handleCanvasClick(t)}),this.canvas.addEventListener("keydown",t=>{t.altKey&&(this.canvas.style.cursor="not-allowed")}),this.canvas.addEventListener("keyup",t=>{!t.altKey&&(this.canvas.style.cursor="auto")}),document.addEventListener("click",t=>{this.canvas.style.cursor="auto",this.edgeVertices=[]}),this.updateDescription()}handleCanvasClick(t){const e=this.canvas.getBoundingClientRect(),s=t.clientX-e.left,i=t.clientY-e.top;this.isDrawingMode?(this.drawOneStroke(s,i),this.updateDescription()):t.altKey?this.deleteFromGraph(s,i):this.drawGraph(s,i)}deleteFromGraph(t,e){const s=this.findVertex(t,e);if(s)this.graph.edges=this.graph.edges.filter(i=>i.vertex1!==s&&i.vertex2!==s),this.graph.vertices=this.graph.vertices.filter(i=>i!==s),this.graph.draw();else{const i=this.findEdge(t,e);i&&(this.graph.edges=this.graph.edges.filter(r=>r!==i),this.graph.vertices=this.graph.vertices.filter(r=>this.graph.edges.some(h=>h.vertex1===r||h.vertex2===r)),this.graph.draw())}}drawGraph(t,e){const s=this.findVertex(t,e);s?this.addEdge(s):this.addVertex(t,e)}drawOneStroke(t,e){if(!this.currentVertex)this.currentVertex=this.findVertex(t,e),this.logStep(!0);else{const s=this.findEdge(t,e);s&&this.handleEdgeClick(s)}this.drawCurrentVertexAndPossibleEdges()}logStep(t=!1,e=""){const s=document.createElement("li");s.innerHTML=e||(t?`出发：${this.currentVertex.name}`:this.currentEdge.vertex1===this.currentVertex?`${this.currentEdge.vertex2.name} → ${this.currentVertex.name}`:`${this.currentEdge.vertex1.name} → ${this.currentVertex.name}`),this.stepsContainer.appendChild(s)}findVertex(t,e){return this.graph.vertices.find(s=>Math.sqrt(Math.pow(s.x-t,2)+Math.pow(s.y-e,2))<10)}addEdge(t){if(this.edgeVertices.length===0)this.edgeVertices.push(t),this.canvas.style.cursor="move";else if(this.edgeVertices.length===1){const e=this.edgeVertices[0],s=t;e!==s&&(this._addEdge(e,s),this.edgeVertices=[],this.canvas.style.cursor="auto")}}addVertex(t,e){if(this.edgeVertices=[],this.vertexCounter>=26){alert("顶点数量已达上限(26)");return}const s=this.getVertexName(),i=new v(t,e,s,this.ctx);this.graph.addVertex(i),i.draw()}getVertexName(){const t=this.graph.vertices.map(({name:i})=>i);let e=0,s=null;for(;e<=this.vertexCounter&&(s=String.fromCharCode(65+e),!!t.includes(s));e++);return s}_addEdge(t,e){if(this.edgeCounter>=100){alert("边数量已达上限(100)");return}const i=this.graph.edges.filter(n=>n.vertex1===t&&n.vertex2===e||n.vertex1===e&&n.vertex2===t).length,r=40,h=this.getCurveFactor(i,r),o=new y(t,e,this.getEdgeName(),h,this.ctx);this.graph.addEdge(o),o.draw()}getEdgeName(){const t=this.graph.edges.map(({name:s})=>s);let e=0;for(;e<=this.edgeCounter&&t.includes(e);e++);return e}getCurveFactor(t,e){const s=t%2===0?t/2:(t+1)/2,i=t===0?0:t%2===0?-s:s;return e*i}startDrawing(){this.isDrawingMode=!0,this.updateDescription()}restartDrawing(){this.currentVertex=null,this.visitedEdges=[],this.graph.draw(),this.isDrawingMode=!0,this.updateDescription(),this.logStep(!1,"--- 重新开始 ---")}findEdge(t,e){const s=this.graph.edges.map(r=>r.pointToEdgeDistance(t,e)),i=Math.min(...s);return i<5?this.graph.edges[s.indexOf(i)]:null}handleEdgeClick(t){if(!this.visitedEdges.includes(t)){const{vertex1:e,vertex2:s}=t;(this.currentVertex===e||this.currentVertex===s)&&(this.visitEdge(t),this.currentVertex=this.currentVertex===e?s:e,this.logStep(),setTimeout(i=>{this.isDrawingFinished()?(alert("恭喜！你成功完成了一笔画。"),this.logStep(!1,"--- 成功 ---")):this.isDrawingFailed()&&(alert("无路可走，一笔画失败。"),this.logStep(!1,"--- 失败 ---"))},300))}}visitEdge(t){this.visitedEdges.push(t),t.draw("blue")}drawCurrentVertexAndPossibleEdges(){this.graph.vertices.forEach(t=>{t===this.currentVertex?t.draw("black"):t.draw("lightgray")}),this.graph.edges.forEach(t=>{this.visitedEdges.includes(t)||(this.canVisit(t)?t.draw("black"):t.draw("lightgray"))})}isDrawingFinished(){return this.visitedEdges.length===this.graph.edges.length}isDrawingFailed(){return!this.graph.edges.some(t=>(t.vertex1===this.currentVertex||t.vertex2===this.currentVertex)&&!this.visitedEdges.includes(t))}restartGraph(){this.graph=new f(this.canvas,this.ctx),this.edgeVertices=[],this.isDrawingMode=!1,this.currentVertex=null,this.visitedEdges=[],this.graph.draw(),this.stepsContainer.innerHTML="",this.updateDescription()}canVisit(t){const{vertex1:e,vertex2:s}=t;return this.currentVertex===e||this.currentVertex===s}updateDescription(){this.description.textContent=this.isDrawingMode?this.currentVertex?"选择当前路径":"选择一笔画的起点":"画图：1. 点击空白创建顶点；2.一次点击两个顶点，创建边；3. 按下Alt键，点击顶点或边，删除"}}const u=new V,C=document.getElementById("startDrawing");C.addEventListener("click",()=>{u.startDrawing()});w.addEventListener("click",()=>{u.restartDrawing()});E.addEventListener("click",()=>{u.restartGraph()});
